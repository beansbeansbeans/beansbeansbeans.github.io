@import "library/vars";

@font-face {
    font-family: Brandon;
    font-weight: 300;
    font-style: normal;
    src: url("/fonts/brandon_300.otf");
}

@font-face {
    font-family: Brandon;
    font-weight: 300;
    font-style: italic;
    src: url("/fonts/brandon_300_it.otf");
}

@font-face {
    font-family: Brandon;
    font-weight: 400;
    font-style: normal;
    src: url("/fonts/brandon_400.otf");
}

@font-face {
    font-family: Brandon;
    font-weight: 400;
    font-style: italic;
    src: url("/fonts/brandon_400_it.otf");
}

@font-face {
    font-family: Brandon;
    font-weight: 500;
    font-style: normal;
    src: url("/fonts/brandon_500.otf");
}

@font-face {
    font-family: Brandon;
    font-weight: 600;
    font-style: normal;
    src: url("/fonts/brandon_600.otf");
}

@font-face {
    font-family: Brandon;
    font-weight: 600;
    font-style: italic;
    src: url("/fonts/brandon_600_it.otf");
}

@font-face {
    font-family: Brandon;
    font-weight: 700;
    font-style: normal;
    src: url("/fonts/brandon_600.otf");
}

@font-face {
    font-family: Brandon;
    font-weight: 700;
    font-style: italic;
    src: url("/fonts/brandon_600_it.otf");
}

@mixin keyframe ($animation_name) {
    @-webkit-keyframes #{$animation_name} {
        @content;
    }
 
    @-moz-keyframes #{$animation_name} {
        @content;
    }
 
    @-o-keyframes #{$animation_name} {
        @content;
    }
 
    @keyframes #{$animation_name} {
        @content;
    }
}

@mixin animation($properties) {
	-webkit-animation: $properties;
	-moz-animation: $properties;
	-o-animation: $properties;
	animation: $properties;
}

@mixin size($width, $height) {
	width: $width;
	height: $height;
}

@mixin square($side) {
	@include size($side, $side);
}

// =======================================

$mq-mobile-portrait     : 320px !default;
$mq-mobile-landscape    : 640px !default;
$mq-tablet-portrait     : 768px !default;
$mq-tablet-landscape    : 1024px !default;
$mq-desktop             : 1382px !default;
 
// Both portrait and landscape
@mixin mobile-only {
    @media (max-width : $mq-mobile-landscape) {
        @content;
    }
}
 
// Everything up to and including the portrait width of the phone
// Since it's the smallest query it doesn't need a min
@mixin mobile-portrait-only {
    @media (max-width : $mq-mobile-portrait) {
        @content;
    }
}
 
// Everything up to and including the mobile portrait
@mixin mobile-portrait-and-below {
    @media (max-width : $mq-mobile-portrait) {
        @content;
    }
}
 
// Everything above and including the mobile portrait
@mixin mobile-portrait-and-up {
    @media (min-width : $mq-mobile-portrait) {
        @content;
    }
}
 
// Everthing larger than a portrait mobile up until mobile landscape
@mixin mobile-landscape-only {
    @media only screen and (min-width : $mq-mobile-portrait + 1) and (max-width : $mq-mobile-landscape) {
        @content;
    }
}
 
// Everything up to and including the mobile landscape width
@mixin mobile-landscape-and-below {
    @media only screen and (max-width : $mq-mobile-landscape) {
        @content;
    }
}
 
// Everything above and including the mobile landscape width
@mixin mobile-landscape-and-up {
    @media only screen and (min-width : $mq-mobile-portrait + 1) {
        @content;
    }
}
 
// Both the portrait and landscape width of the tablet
// Larger than a landscape mobile but less than or equal to a landscape tablet
@mixin tablet-only {
    @media only screen and (min-width : $mq-mobile-landscape + 1) and (max-width : $mq-tablet-landscape) {
        @content;
    }
}
 
// Everything larger than mobile landscape up until the portrait width of the tablet
@mixin tablet-portrait-only {
    @media only screen and (min-width : $mq-mobile-landscape + 1) and (max-width : $mq-tablet-portrait) {
        @content;
    }
}
 
// Everything below and including the portrait width of the tablet
@mixin tablet-portrait-and-below {
    @media only screen and (max-width : $mq-tablet-portrait) {
        @content;
    }
}
 
// Everything above and including the portrait width of the tablet
@mixin tablet-portrait-and-up {
    @media only screen and (min-width : $mq-mobile-landscape + 1) {
        @content;
    }
}
 
// Larger than portrait but less than or equal to the landscape width
@mixin tablet-landscape-only {
    @media only screen and (min-width : $mq-tablet-portrait + 1) and (max-width : $mq-tablet-landscape) {
        @content;
    }
}
 
// Up to and including the tablet landscape
@mixin tablet-landscape-and-below {
    @media only screen and (max-width : $mq-tablet-landscape) {
        @content;
    }
}
 
// Everything larger than portrait tablet
@mixin tablet-landscape-and-up {
    @media only screen and (min-width : $mq-tablet-portrait + 1) {
        @content;
    }
}
 
// Everything larger than a landscape tablet
@mixin desktop-and-up {
    @media only screen and (min-width : $mq-tablet-landscape + 1) {
        @content;
    }
}
 
// Everything below and including the desktop 
@mixin desktop-and-below {
    @media only screen and (max-width : $mq-desktop) {
        @content;
    }
}
 
// Everything larger than a landscape tablet but less than or equal to the desktop
@mixin desktop-only {
    @media only screen and (min-width : $mq-tablet-landscape + 1) and (max-width : $mq-desktop) {
        @content;
    }
}

// ====================================

@mixin content-width() {
    width: 40%;
    @include mobile-only {
        width: 80%;
    }
}

@import "library/ui_elements";